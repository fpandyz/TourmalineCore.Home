# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker Image

on:
  push:
    branches:
      - feature/*

  workflow_call:
    inputs:
      # Prefix used to be able to build images for local-env and prod-env with different tags
      # Example of prefix: local-env
      prefix:
        required: false
        type: string
      # Build-args used to define variables that will be used in image
      build-args:
        required: false
        type: string

jobs:
  build_amd64:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Prepare
        run: |
          platform=linux/amd64
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tourmalinecore/${{ github.event.repository.name@L }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ghcr.io/tourmalinecore/${{ github.event.repository.name@L }}
          build-args: ${{ inputs.build-args }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  build_arm64:
    runs-on: ubuntu-22.04-arm
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Prepare
        run: |
          platform=linux/arm64
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tourmalinecore/${{ github.event.repository.name@L }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ghcr.io/tourmalinecore/${{ github.event.repository.name@L }}
          build-args: ${{ inputs.build-args }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build_amd64
      - build_arm64
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tourmalinecore/${{ github.event.repository.name@L }}
          tags: |
            type=raw,value=${{ inputs.prefix && format('{0}-', inputs.prefix) || '' }}latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=sha,prefix=${{ inputs.prefix && format('{0}-', inputs.prefix) || '' }}sha-
            type=sha,format=long,prefix=${{ inputs.prefix && format('{0}-', inputs.prefix) || '' }}sha-

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/tourmalinecore/${{ github.event.repository.name@L }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/tourmalinecore/${{ github.event.repository.name@L }}:${{ steps.meta.outputs.version }}
       